# Default values for coweb.
replicaCount: 8

# Container Image Configuration
image:
  repository: localhost:5000/coweb
  pullPolicy: Always
  tag: "latest"

# Service Configuration
service:
  name: coweb-service  # Correctly sets the service name
  namespace: coweb-ns
  type: NodePort
  port: 80
  targetPort: 80
  protocol: TCP
  nodePort: 32500  # NodePort must be within 30000-32767 range

# Ingress Configuration (Disabled by Default)
ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

# Resources Configuration
resources: {}
  # Example:
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Health Checks (Liveness & Readiness Probes)
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# Autoscaling Configuration (Disabled by Default)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Node & Pod Configuration
nodeSelector: {}
tolerations: []
affinity: {}

serviceAccount:
  create: true  # Ensure this is explicitly set
  name: ""  # Optional, override service account name

  
# ArgoCD Application Configuration
name: coweb-app
namespace: argocd
project: coweb-ns
repoURL: https://github.com/Oreire/helm-kubdep.git
targetRevision: main
path: coweb/
destinationServer: https://kubernetes.default.svc
destinationNamespace: coweb-ns

# Helm-specific Configuration
helm:
  valueFiles:
    - values.yaml
  parameters:
    argoServer:
      service:
        port: 80
        host: argocd-server

# ArgoCD Sync Policy
syncPolicy:
  prune: true
  selfHeal: true
  ignoreDifferences: true
  syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
    - Replace=true

argoServer:
  service:
    port: 80  # Ensure this key-value pair is present
    host: argocd-server

